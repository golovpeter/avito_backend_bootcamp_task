// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package flats is a generated GoMock package.
package flats

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// GetFlatsByHouseID mocks base method.
func (m *MockRepository) GetFlatsByHouseID(ctx context.Context, data *GetFlatsIn) ([]*FlatData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFlatsByHouseID", ctx, data)
	ret0, _ := ret[0].([]*FlatData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFlatsByHouseID indicates an expected call of GetFlatsByHouseID.
func (mr *MockRepositoryMockRecorder) GetFlatsByHouseID(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFlatsByHouseID", reflect.TypeOf((*MockRepository)(nil).GetFlatsByHouseID), ctx, data)
}

// InsertNewFlat mocks base method.
func (m *MockRepository) InsertNewFlat(ctx context.Context, data *InsertNewFlatIn) (*FlatData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertNewFlat", ctx, data)
	ret0, _ := ret[0].(*FlatData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InsertNewFlat indicates an expected call of InsertNewFlat.
func (mr *MockRepositoryMockRecorder) InsertNewFlat(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertNewFlat", reflect.TypeOf((*MockRepository)(nil).InsertNewFlat), ctx, data)
}

// UpdateFlatStatus mocks base method.
func (m *MockRepository) UpdateFlatStatus(ctx context.Context, data *UpdateFlatIn) (*FlatData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateFlatStatus", ctx, data)
	ret0, _ := ret[0].(*FlatData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateFlatStatus indicates an expected call of UpdateFlatStatus.
func (mr *MockRepositoryMockRecorder) UpdateFlatStatus(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateFlatStatus", reflect.TypeOf((*MockRepository)(nil).UpdateFlatStatus), ctx, data)
}
